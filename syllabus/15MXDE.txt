<br/><b> MULTI-CORE PROCESSORS :</b><br/>      Single core to Multi-core architectures – SIMD and MIMD systems – Interconnection networks – Symmetric and Distributed Shared Memory Architectures – Cache coherence – Performance Issues – Parallel program design.     (9)             
<br/><b>PARALLEL PROGRAM CHALLENGES:</b><br/> Performance – Scalability – Synchronization and data sharing – Data races –      Synchronization primitives (mutexes, locks, semaphores, barriers) – deadlocks and livelocks – communication between threads (condition variables, signals, message queues and pipes). 	  				               	                              (9)				
<br/><b>SHARED MEMORY PROGRAMMING WITH OpenMP:</b><br/>   OpenMP Execution Model – Memory Model – OpenMP Directives – Work-sharing Constructs – Library functions – Handling Data and Functional Parallelism – Handling Loops – Performance Considerations.     					                                                                                                                              (9)
<br/><b>DISTRIBUTED MEMORY PROGRAMMING WITH MPI :</b><br/> MPI program execution – MPI constructs – libraries – MPI send and receive – Point-to-point and Collective communication – MPI derived datatypes – Performance evaluation. 	                                              (9)	
<br/><b>PARALLEL PROGRAM DEVELOPMENT :</b><br/> Case studies – n-Body solvers – Tree Search – OpenMP and MPI implementations and comparison.						  				                              (9)                                                                              	                                	             				             Total L <br/><b>REFERENCES:</b><br/>
<br/>1.	Herlihy M and Shavit N, “The Art of Multiprocessor Programming”, Morgan Kaufmann, 2008.
<br/>2.	Kirk D B and Hwu W W, “Programming Massively Parallel processors: A Hands-on approach”, Morgan Kaufmann, 2010.
<br/>3.	Huges C and Huges T, “Professional Multi-core programming: Design and Implementation for C++developers”, Wrox, 2008.
<br/><br/>